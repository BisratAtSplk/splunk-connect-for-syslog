# Cisco ASA
{{- /* The following provides a unique port source configuration if env var(s) are set */}}
{{- $context := dict "port_id" "CISCO_ASA_LEGACY" "parser" "common" }}
{{- tmpl.Exec "t/source_network.t" $context }}

{{- /* The following is an inline template to generate the actual log path */}}
{{- define "log_path"}}
log {
{{- if eq (.) "yes"}}
    source(s_DEFAULT);
    filter(f_is_rfc3164);
    filter(f_cisco_asa);
{{- end}}
{{- if eq (.) "no"}}
    source (s_CISCO_ASA_LEGACY);
{{- end}}

    rewrite {
        set("cisco_asa", value("fields.sc4s_vendor_product"));
        r_set_splunk_dest_default(sourcetype("cisco:asa"), index("netfw"))
    };
    parser {p_add_context_splunk(key("cisco_asa")); };
    parser (compliance_meta_by_source);
    rewrite { set("$(template ${.splunk.sc4s_template} $(template t_msg_only))" value("MSG")); };

{{- if or (conv.ToBool (getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes")) (conv.ToBool (getenv "SC4S_DEST_CISCO_ASA_HEC" "no")) }}
    destination(d_hec);
{{- end}}

{{- if or (conv.ToBool (getenv "SC4S_ARCHIVE_GLOBAL" "no")) (conv.ToBool (getenv "SC4S_ARCHIVE_CISCO_ASA_LEGACY" "no")) }}
    destination(d_archive);
{{- end}}


    flags(flow-control,final);

};
{{- end}}
{{- if or (or (getenv  (print "SC4S_LISTEN_CISCO_ASA_LEGACY_TCP_PORT")) (getenv  (print "SC4S_LISTEN_CISCO_ASA_LEGACY_UDP_PORT"))) (getenv  (print "SC4S_LISTEN_CISCO_ASA_LEGACY_TLS_PORT")) }}

# Listen on the specified dedicated port(s) for CISCO_ASA_LEGACY traffic
    {{tmpl.Exec "log_path" "no" }}
{{- end}}

# Listen on the default port (typically 514) for CISCO_ASA_LEGACY traffic
{{tmpl.Exec "log_path" "yes" }}
