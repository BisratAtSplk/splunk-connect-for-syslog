# Juniper IDP
{{- /* The following provides a unique port source configuration if env var(s) are set */}}
{{- $context := dict "port_id" "JUNIPER_IDP" "parser" "common" }}
{{- tmpl.Exec "t/source_network.t" $context }}

{{- /* The following is an inline template to generate the actual log path */}}
{{- define "log_path"}}
log {
{{- if eq (.) "yes"}}
    source(s_DEFAULT);
    filter(f_is_rfc5424_strict);
    filter(f_juniper_idp);
{{- end}}
{{- if eq (.) "no"}}
    source (s_JUNIPER_IDP);
{{- end}}

    rewrite {
        set("juniper_idp", value("fields.sc4s_vendor_product"));
        r_set_splunk_dest_default(sourcetype("juniper:idp"), index("netids"))
    };
    parser {  p_add_context_splunk(key("juniper_idp")); };
    parser (compliance_meta_by_source);
    rewrite { set("$(template ${.splunk.sc4s_template} $(template t_hdr_sdata_msg))" value("MSG")); };

{{- if or (conv.ToBool (getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes")) (conv.ToBool (getenv "SC4S_DEST_JUNIPER_IDP_HEC" "no")) }}
    destination(d_hec);
{{- end}}

{{- if or (conv.ToBool (getenv "SC4S_ARCHIVE_GLOBAL" "no")) (conv.ToBool (getenv "SC4S_ARCHIVE_JUNIPER_IDP" "no")) }}
    destination(d_archive);
{{- end}}

    flags(flow-control,final);
};
{{- end}}

{{- if or (or (getenv  (print "SC4S_LISTEN_JUNIPER_IDP_TCP_PORT")) (getenv  (print "SC4S_LISTEN_JUNIPER_IDP_UDP_PORT"))) (getenv  (print "SC4S_LISTEN_JUNIPER_IDP_TLS_PORT")) }}
# Listen on the specified dedicated port(s) for JUNIPER_IDP traffic
{{ tmpl.Exec "log_path" "no" }}
{{- end}}

# Listen on the default port (typically 514) for JUNIPER_IDP traffic
{{ tmpl.Exec "log_path" "yes" }}
