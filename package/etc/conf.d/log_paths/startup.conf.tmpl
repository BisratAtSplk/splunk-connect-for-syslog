{{- define "log_path"}}
log {
    source(s_startup_out);


    rewrite { r_set_splunk_dest_default(sourcetype("sc4s:events"), index("main"))};
    parser {p_add_context_splunk(key("sc4s_events:startup:out")); };

    {{- if ((getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes") | conv.ToBool) or (conv.ToBool (getenv "SC4S_DEST_INTERNAL_EVENTS_HEC" "no") | conv.ToBool) }}
    destination(d_hec_internal);
    {{- end}}

    {{- if eq (getenv "SC4S_DEBUG_STDOUT" "yes") "yes"}}
    destination(d_stdout);
    {{- end}}

     flags(flow-control,final);
 };
log {
    source(s_startup_err);


    rewrite { r_set_splunk_dest_default(sourcetype("sc4s:events:startup:err"), index("main"))};
    parser {p_add_context_splunk(key("sc4s_events")); };

    {{- if ((getenv "SC4S_DEST_SPLUNK_HEC_GLOBAL" "yes") | conv.ToBool) or (conv.ToBool (getenv "SC4S_DEST_INTERNAL_EVENTS_HEC" "no") | conv.ToBool) }}
    destination(d_hec_internal);
    {{- end}}

    {{- if eq (getenv "SC4S_DEBUG_STDOUT" "yes") "yes"}}
    destination(d_stdout);
    {{- end}}

     flags(flow-control,final);
 };
{{- end}}
{{- tmpl.Exec "log_path" "yes" }}
