# ===============================================================================================
# "Catch-all" destination; all unfiltered messages end up here
# ===============================================================================================

log {
# ===============================================================================================
# Section 1:  source configuration
# Defaults: default source and ports as defined in s_sources.conf and syslog-ng.conf.
#
# IMPORTANT:  In order to ensure proper startup, select only one source in this section.
# If a source other than the default is used, ensure that any UDP/TCP protocol/port pairs passed
# are unique throughout the *entire* sylog-ng config.  If there are any port overlaps with those
# in source declarations from other filter files, an "Address already in use" error will occur
# at startup.
#
# NOTE:  The "Catchall" should not use any source other than the default.  Be extremely careful
# when defining an alternate source here.  Default ports can be changed in the global declarations
# in the main syslog-ng.conf file.
# ===============================================================================================

source(s_default-ports);

# ===============================================================================================
# Section 2:  parser configuration
# Default syslog-parser() should work for most messages
#
# If a new data source is not properly parsing using the default, you may wish to comment out 
# all parsers to see the raw message as it appeared "on the wire".  This can be useful for 
# creating custom parsers for non-syslog-compliant meessages.
# ===============================================================================================

# This is "normal" RFC3164-formatted (BSD-syslog) messages. Always try this one first if unsure.
parser { syslog-parser(time-zone(`default-timezone`)); };

# For RFC5424-formatted messages, use this instead
# parser { syslog-parser(time-zone(`default-timezone`) flags(syslog-protocol)); };

# ===============================================================================================
# Section 3:  filter configuration
# Filter below may be omitted in the log path if a dedicated source is configured above
# Filter typically not used for a fallback destination
# ===============================================================================================

# filter { };

# ===============================================================================================
# Section 4:  destination configuration
# Select the desired destination to use in the log path from the three choices below,
# based on the transfer method (UF/HEC/Kafka) desired. Then, provide a unique vendor string
# for UF transport, and a unique sourcetype argument and optional index, topic, and message 
# template arguments (as appropriate) for HEC/Kafka transport, paying careful attention to the 
# note below.
#
# IMPORTANT:  If modifications are made in this section, ensure that two or more distinct 
# destinations do *not* reference the same destination block call with an idential set of 
# arguments (including no arguments, and arguments passed via destinations declared in other 
# conf.d include files), or you will see this at startup: "Error checking the uniqueness of 
# the persist names, please override it with persist-name option. Shutting down."  
# The easiest way to satisfy this is to always pass a unique sourcetype argument for any new 
# or changed destination declaration.
# ===============================================================================================

# ===============================================================================================
# This catchall file should be the *only* one where the destinations use defaults for all arguments!
# Full-metadata destinations used here; check indexed event data in Splunk for full message.
# This can be helpful to determine the compliance of message to standard syslog formats, and as 
# an aid for custom parser development if needed.
# ===============================================================================================

destination {
#   d_splunk_logfile();  #--UF--
    d_hec_with_full_metadata();  #--HEC--
#   d_kafka_with_full_metadata();  #--KAFKA--
    };

# ===============================================================================================
# Fallback flag set here; will catch all unfiltered traffic
# ===============================================================================================
flags(fallback);
};
