# ===============================================================================================
# Cisco IOS (Route/Switch)
# ===============================================================================================

log {
# ===============================================================================================
# Section 1:  source configuration
# Defaults: default source and ports as defined in s_sources.conf and syslog-ng.conf.
#
# IMPORTANT:  In order to ensure proper startup, select only one source in this section.
# If a source other than the default is used, ensure that any UDP/TCP protocol/port pairs passed
# are unique throughout the *entire* sylog-ng config.  If there are any port overlaps with those
# in source declarations from other filter files, an "Address already in use" error will occur
# at startup.
# ===============================================================================================

source(s_default-ports);

# source { s_unique-ports(udp_port(814) tcp_port(814)); };

# ===============================================================================================
# Section 2:  parser configuration
# Default syslog-parser() should work for most messages
# ===============================================================================================

# This is "normal" RFC3164-formatted (BSD-syslog) messages. Always try this one first if unsure.
parser { syslog-parser(time-zone(`default-timezone`)); };

# For RFC5424-formatted messages, use this instead
# parser { syslog-parser(time-zone(`default-timezone`) flags(syslog-protocol)); };

# ===============================================================================================
# Section 3:  filter configuration
# Filter below may be omitted in the log path if a dedicated source is configured above
# ===============================================================================================

filter { match("[%|#][A-Z0-9_]+-[A-Z012_]*-*[0-7]-[A-Z0-9_]+:" value("MESSAGE"))
      ;};


# ===============================================================================================
# Section 4:  destination configuration
# Select the desired destination to use in the log path from the three choices below,
# based on the transfer method (UF/HEC/Kafka) desired. Then, provide a unique vendor string
# for UF transport, and a unique sourcetype argument and optional index, topic, and message 
# template  arguments (as appropriate) for HEC/Kafka transport, paying careful attention to the 
# note below.
#
# IMPORTANT:  If modifications are made in this section, ensure that two or more distinct 
# destinations do *not* reference the same destination block call with an idential set of 
# arguments (including no arguments, and arguments passed via destinations declared in other 
# conf.d include files), or you will see this at startup: "Error checking the uniqueness of 
# the persist names, please override it with persist-name option. Shutting down."  
# The easiest way to satisfy this is to always pass a unique sourcetype argument for any new 
# or changed destination declaration.
# ===============================================================================================

destination {
#   d_splunk_logfile(vendor("cisco-ios")); #--UF--
    d_hec_with_metadata(sourcetype("cisco:ios")); #--HEC--
#   d_kafka_with_metadata(sourcetype("cisco:ios")); #--KAFKA--
    };
flags(final);
};
